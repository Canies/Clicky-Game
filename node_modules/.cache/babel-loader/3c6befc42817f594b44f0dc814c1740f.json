{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Clicky-Game/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      highscore: 0,\n      score: 0\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.map(friend => {\n        if (friend.id !== id) {\n          friend.clicked = true;\n          this.setState({\n            highscore: this.state.highscore + 1,\n            score: this.state.score + 1\n          });\n        } else {\n          this.setState({\n            score: 0\n          });\n        }\n\n        return friend;\n      });\n      friends.sort((a, b) => {\n        return Math.random() - 0.5;\n      }); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Friends List\"), \"High Score: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", this.state.highscore), \"  Score:  \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.score), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      occupation: friend.occupation,\n      location: friend.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Clicky-Game/client/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","highscore","score","removeFriend","id","map","friend","clicked","setState","sort","a","b","Math","random","render","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA,OADM;AAENG,MAAAA,SAAS,EAAE,CAFL;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAFkB;;AAAA,SAQ1BC,YAR0B,GAQXC,EAAE,IAAI;AACnB;AACA,YAAMN,OAAO,GAAG,KAAKE,KAAL,CAAWF,OAAX,CAAmBO,GAAnB,CAAuBC,MAAM,IAAI;AAC/C,YAAIA,MAAM,CAACF,EAAP,KAAcA,EAAlB,EAAsB;AAGpBE,UAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACA,eAAKC,QAAL,CAAc;AAEZP,YAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,GAAuB,CAFtB;AAGZC,YAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AAHd,WAAd;AAMD,SAVD,MAWK;AACH,eAAKM,QAAL,CAAc;AACZN,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD;;AACD,eAAOI,MAAP;AAED,OAnBe,CAAhB;AAqBAR,MAAAA,OAAO,CAACW,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,eAAOC,IAAI,CAACC,MAAL,KAAgB,GAAvB;AACD,OAFD,EAvBmB,CA2BnB;;AACA,WAAKL,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AAED,KAtCyB;AAAA;;AA4C1B;AACAgB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,kBAEU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,KAAKd,KAAL,CAAWC,SAAnB,CAFV,gBAEwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKD,KAAL,CAAWE,KAAlB,CAFxD,EAGG,KAAKF,KAAL,CAAWF,OAAX,CAAmBO,GAAnB,CAAuBC,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,YAAY,EAAE,KAAKH,YADrB;AAEE,MAAA,EAAE,EAAEG,MAAM,CAACF,EAFb;AAGE,MAAA,GAAG,EAAEE,MAAM,CAACF,EAHd;AAIE,MAAA,IAAI,EAAEE,MAAM,CAACS,IAJf;AAKE,MAAA,KAAK,EAAET,MAAM,CAACU,KALhB;AAME,MAAA,UAAU,EAAEV,MAAM,CAACW,UANrB;AAOE,MAAA,QAAQ,EAAEX,MAAM,CAACY,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,CADF;AAiBD;;AA/DyB;;AAkE5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    highscore: 0,\n    score: 0,\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.map(friend => {\n      if (friend.id !== id) {\n\n        \n        friend.clicked = true\n        this.setState({\n\n          highscore: this.state.highscore + 1,\n          score: this.state.score + 1\n\n        })\n      }\n      else {\n        this.setState({\n          score: 0\n        })\n      }\n      return friend\n\n    });\n\n    friends.sort((a, b) => {\n      return Math.random() - 0.5;\n    })\n\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n\n  };\n\n\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n    High Score: <span> {this.state.highscore}</span>  Score:  <span>{this.state.score}</span>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}